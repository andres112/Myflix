{{- if .Values.backup.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-script
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "jellyfin.labels" . | nindent 4 }}
data:
  backup.sh: |
    #!/bin/sh
    set -e
    TIMESTAMP=$(date +%Y%m%d-%H%M)
    TMP_DIR="/tmp/myflix-backup-$TIMESTAMP"

    export RCLONE_S3_PROVIDER=Cloudflare
    export RCLONE_S3_ENV_AUTH=true
    export RCLONE_S3_ENDPOINT=https://{{ .Values.backup.r2AccountId }}.r2.cloudflarestorage.com
    DEST=":s3:myflix-backups"
  
    mkdir -p "$TMP_DIR"

    echo "Starting Jellyfin config backup at $(date)"

    # 1. Archive only config folder (includes SQLite DB)
    tar -czf "$TMP_DIR/jellyfin-config.tar.gz" -C /srv/jellyfin config

    # 2. Upload to R2
    rclone copy "$TMP_DIR" "$DEST/$TIMESTAMP" --progress

    # 3. Retention policy: keep only the last 5 backups
    BACKUPS=$(rclone lsf "$DEST" --dirs-only | sort -r)
    KEEP=$(echo "$BACKUPS" | head -n 5)

    for DIR in $BACKUPS; do
      if ! echo "$KEEP" | grep -q "$DIR"; then
        echo "Purging old backup: $DIR"
        rclone purge "$DEST/$DIR" || true
      fi
    done

    rm -rf "$TMP_DIR"
    echo "Backup finished successfully at $(date)"
{{- end }}
